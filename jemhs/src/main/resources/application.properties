#spring.mvc.view.prefix: /WEB-INF/jsp/
#spring.mvc.view.suffix: .jsp

#disbale Spring banner
spring.main.banner-mode=off

spring.datasource.url = jdbc:mysql://localhost:3306/jemhs
spring.datasource.username = jemhs
spring.datasource.password = jemhs

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = validate

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

# ==============================================================
# = JavaMailSender Configuration  
# ==============================================================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=jemhs99@gmail.com
spring.mail.password=R***********
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

security.user.name=admin
security.user.password=jemhs

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
spring.queries.users-query= select user_name, password, active from user where user_name=?
#spring.roles-query=select st.user_name, r.role from user st inner join user_role ur on(st.id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where st.user_name='a'
spring.queries.roles-query=select u.user_name, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.user_name=?

logging.level.org.springframework.security: DEBUG